<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jen Richmond on Hugo Apéro</title>
    <link>https://jennyrichmond.netlify.app/</link>
    <description>Recent content in Jen Richmond on Hugo Apéro</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 04 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://jennyrichmond.netlify.app/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Netlify</title>
      <link>https://jennyrichmond.netlify.app/collection/day02/01-netlify/</link>
      <pubDate>Sat, 02 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/collection/day02/01-netlify/</guid>
      <description>So far, we&amp;rsquo;ve been leveraging GitHub Pages for publishing. This works great, but for blogdown we&amp;rsquo;ll start using Netlify. Let&amp;rsquo;s start RIGHT NOW with a site we&amp;rsquo;ve already built and published.
Pre-requisites     Pick either your postcards site, or your distill site from day 01. Refresh your memory- which repository was it again?</description>
    </item>
    
    <item>
      <title>A GitHub profile</title>
      <link>https://jennyrichmond.netlify.app/collection/day01/01-github/</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/collection/day01/01-github/</guid>
      <description>Profile     https://docs.github.com/en/github/setting-up-and-managing-your-github-profile/personalizing-your-profile
Pin projects to profile     https://docs.github.com/en/github/setting-up-and-managing-your-github-profile/pinning-items-to-your-profile
Profile README     This is new! Let&amp;rsquo;s do it:
https://docs.github.com/en/github/setting-up-and-managing-your-github-profile/managing-your-profile-readme</description>
    </item>
    
    <item>
      <title>Prework</title>
      <link>https://jennyrichmond.netlify.app/collection/prework/</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/collection/prework/</guid>
      <description>Welcome to the Introducing Yourself Online workshop! We look forward to meeting you. Before attending the workshop, please complete the following prework.
Set up RStudio Cloud     Sign up for a free RStudio Cloud account at https://rstudio.cloud/ before the workshop. I recommend logging in with an existing Google or GitHub account, if you have one (rather than creating a new account with another password you have to remember).</description>
    </item>
    
    <item>
      <title>A postcard</title>
      <link>https://jennyrichmond.netlify.app/collection/day01/02-postcards/</link>
      <pubDate>Sat, 02 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/collection/day01/02-postcards/</guid>
      <description>Pre-requisites     First, make sure you have the latest version of the postcards package installed from CRAN:
install.packages(&amp;quot;postcards&amp;quot;) Restart your R session. If you use RStudio, use the menu item Session &amp;gt; Restart R or the associated keyboard shortcut:
 Ctrl + Shift + F10 (Windows and Linux) or Command + Shift + F10 (Mac OS).  packageVersion(&amp;quot;postcards&amp;quot;) [1] ‘0.2.0’  Create GitHub repo     Online.</description>
    </item>
    
    <item>
      <title>Using blogdown</title>
      <link>https://jennyrichmond.netlify.app/collection/day02/02-blogdown/</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/collection/day02/02-blogdown/</guid>
      <description>Pre-requisites     First, make sure you have the latest version of the blogdown package installed from CRAN:
install.packages(&amp;quot;blogdoown&amp;quot;) Restart your R session. If you use RStudio, use the menu item Session &amp;gt; Restart R or the associated keyboard shortcut:
 Ctrl + Shift + F10 (Windows and Linux) or Command + Shift + F10 (Mac OS).  packageVersion(&amp;quot;blogdown&amp;quot;) [1] ‘1.0’  Create GitHub repo     Online.</description>
    </item>
    
    <item>
      <title>A distill site</title>
      <link>https://jennyrichmond.netlify.app/collection/day01/03-distill/</link>
      <pubDate>Sat, 02 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/collection/day01/03-distill/</guid>
      <description>Pre-requisites     First, make sure you have the latest version of the distill package installed from CRAN:
install.packages(&amp;quot;distill&amp;quot;)  Restart your R session. If you use RStudio, use the menu item Session &amp;gt; Restart R or the associated keyboard shortcut:
 Ctrl + Shift + F10 (Windows and Linux) or Command + Shift + F10 (Mac OS).  &amp;lt;!-- --&amp;gt; packageVersion(&amp;quot;distill&amp;quot;) [1] ‘1.2’  Create GitHub repo     Online.</description>
    </item>
    
    <item>
      <title>Warm woolen mittens</title>
      <link>https://jennyrichmond.netlify.app/collection/day02/03-blogdown/</link>
      <pubDate>Sat, 02 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/collection/day02/03-blogdown/</guid>
      <description>Hi, I&#39;m the here-bot cat! Use me to find your way in your website.
Here I am: content/collection/day02/03-blogdown/index.md  To remove me, delete this line inside that file: {{&amp;lt; here &amp;gt;}}
My content section is: collection  My layout is: single-series   part 2!     does this work?      now for some very cool things     more     get ready!</description>
    </item>
    
    <item>
      <title></title>
      <link>https://jennyrichmond.netlify.app/about/about-me/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/about/about-me/</guid>
      <description>I am originally from Atlanta, Georgia, and am a proud ramblin&#39; wreck from Georgia Tech. I received my PhD in psychology and quantitative methods from Vanderbilt University in 2008. Prior to joining RStudio, I was an Assistant Professor at Arizona State University, and an Associate Professor at Oregon Health &amp;amp; Science University (OHSU). At OHSU, I was an NIH-funded Principal Investigator and an Assistant Center Director.
My research focused on health-related applications of Natural Language Processing-based methods, and was funded by the National Institutes of Health, the Oregon Clinical and Translational Research Institute, and Autism Speaks.</description>
    </item>
    
    <item>
      <title>learning python outloud</title>
      <link>https://jennyrichmond.netlify.app/blog/2024-07-04-learning-python-outloud/</link>
      <pubDate>Thu, 04 Jul 2024 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/2024-07-04-learning-python-outloud/</guid>
      <description>When you are exploring a far off land and only know a tiny bit of the language they speak there, you ALWAYS carry a little dictionary with commonly used phrases translated from the language you speak into the other language. It is important to know how to ask someone where the toilets are while you are travelling!
I have just started learning Python with Posit Academy in the lead up to #positconf2024 and I am trying to approach in the same way I would if I was learning French.</description>
    </item>
    
    <item>
      <title>rowwise %&gt;% mean</title>
      <link>https://jennyrichmond.netlify.app/blog/i-dont-have-to-google-series/2023-05-24-rowwise-mean/</link>
      <pubDate>Wed, 24 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/i-dont-have-to-google-series/2023-05-24-rowwise-mean/</guid>
      <description>When you have data from a survey, the responses for each item are most often listed in different variables. Generally you have to average across the items to get a mean value for that scale for each participant. But dealing with calculations across rows is sometimes difficult in R.
load packages + make some data     library(tidyverse) pID &amp;lt;- c(&amp;#34;p1&amp;#34;, &amp;#34;p2&amp;#34;, &amp;#34;p3&amp;#34;, &amp;#34;p4&amp;#34;, &amp;#34;p5&amp;#34;, &amp;#34;p6&amp;#34;) item1 = sample(1:7, 6, replace=T) item2 = sample(1:7, 6, replace=T) item3 = sample(1:7, 6, replace=T) item4 = sample(1:7, 6, replace=T) item5 = sample(1:7, 6, replace=T) survey &amp;lt;- data.</description>
    </item>
    
    <item>
      <title>error bars on plots</title>
      <link>https://jennyrichmond.netlify.app/blog/i-dont-have-to-google-series/2023-04-25-error-bars-on-plots/</link>
      <pubDate>Tue, 25 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/i-dont-have-to-google-series/2023-04-25-error-bars-on-plots/</guid>
      <description>Repurposing this APA figures post as a IDHTG post.
As I write my first paper reporting data analysis coming out of R (woot!!!), here are some notes summarising all the googling I have done this morning about how to produce APA style figures in ggplot.
 Load libraries     Start by loading tidyverse to get ggplot, here to make finding the data easy, and papaja to get the theme_apa() function.</description>
    </item>
    
    <item>
      <title>how to do t-tests</title>
      <link>https://jennyrichmond.netlify.app/blog/i-dont-have-to-google-series/2023-04-25-move-test/</link>
      <pubDate>Tue, 25 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/i-dont-have-to-google-series/2023-04-25-move-test/</guid>
      <description>I was trying to work out how to do t-tests using my own data and the lsr package but ended up working with Dani&amp;rsquo;s AFL data from her book while trying to work out why R insisted that my outcome variable wasn&amp;rsquo;t numeric (it definitely was). Turns out that the lsr package doesn&amp;rsquo;t deal well with tibbles (which are created by default when you use read_csv to get your data) but if you use read.</description>
    </item>
    
    <item>
      <title>colours that R knows</title>
      <link>https://jennyrichmond.netlify.app/blog/i-dont-have-to-google-series/2022-12-15-colours-that-r-knows/</link>
      <pubDate>Wed, 14 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/i-dont-have-to-google-series/2022-12-15-colours-that-r-knows/</guid>
      <description>I have been working through the ggplot R Advent calendar by Kiirsti Owen with some lovely RLadies friends and we got up to Day 15 where we started controlling colours in ggplot with scale_fill_manual(). Our immediate question was &amp;ldquo;how to you know what the names of the colours that R knows are?&amp;rdquo;
This is a &amp;ldquo;I don&amp;rsquo;t have to google&amp;rdquo; post about finding the colours that R knows about.
trees %&amp;gt;% ggplot(aes(x=type, y=height))+ geom_boxplot(aes(fill=type), colour=&amp;#34;black&amp;#34;)+ theme_classic()+ scale_fill_manual(values=c(&amp;#34;darkgreen&amp;#34;, &amp;#34;firebrick2&amp;#34;, &amp;#34;mediumseagreen&amp;#34;)) You can have R list the names of all the colours it knows (there are 657 of them) using the colours() function, but that is not so useful if you want to see the difference between hotpink1 and hotpink2.</description>
    </item>
    
    <item>
      <title>Put your reviewer hat on</title>
      <link>https://jennyrichmond.netlify.app/talk/reviewerhat/</link>
      <pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/talk/reviewerhat/</guid>
      <description></description>
    </item>
    
    <item>
      <title>The Art of General Discussion Writing</title>
      <link>https://jennyrichmond.netlify.app/talk/art/</link>
      <pubDate>Fri, 14 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/talk/art/</guid>
      <description></description>
    </item>
    
    <item>
      <title>how to subset strings</title>
      <link>https://jennyrichmond.netlify.app/blog/i-dont-have-to-google-series/2022-09-29-string-stuff/</link>
      <pubDate>Thu, 29 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/i-dont-have-to-google-series/2022-09-29-string-stuff/</guid>
      <description>Sometimes you have a column in your data frame that is text, but there is some of it that you don&amp;rsquo;t need. Lets say your data looks like this&amp;hellip;
df &amp;lt;- data.frame(animals = c(&amp;#34;this is a bear&amp;#34;, &amp;#34;this is a lion&amp;#34;, &amp;#34;this is a tiger&amp;#34;)) df ## animals ## 1 this is a bear ## 2 this is a lion ## 3 this is a tiger And perhaps only want the animal names&amp;hellip; you can use sub_str() from the stringr package to strip out the extra characters.</description>
    </item>
    
    <item>
      <title>git hints</title>
      <link>https://jennyrichmond.netlify.app/blog/2022-09-28-git-hints/</link>
      <pubDate>Wed, 28 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/2022-09-28-git-hints/</guid>
      <description>I am getting pretty good at avoiding git merge conflicts by always remembering to pull before I push when using github. But the terminal in RStudio has been giving me this hint for a while and I have been ignoring it.
I think this hint is trying to help me but I don&amp;rsquo;t know what rebase or fast-forward means&amp;hellip; to google&amp;hellip;
 This post suggests that I should only use git pull -ff, going as far as setting -ff as a global config setting.</description>
    </item>
    
    <item>
      <title>analysing smartwatch data</title>
      <link>https://jennyrichmond.netlify.app/blog/2022-07-13-analysing-smartwatch-data/</link>
      <pubDate>Wed, 13 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/2022-07-13-analysing-smartwatch-data/</guid>
      <description>Sometimes trying to replicate what someone is doing in a blogpost you find on twitter is a great way to learn something new. I am half heartedly thinking about trying to learn Python so when I saw this post about analysing smartwatch data on twitter I thought that it looked like interesting data and perhaps if I tried to do what they had done in R, that would be a useful way of starting to translate my R knowledge into python… maybe.</description>
    </item>
    
    <item>
      <title>using lists in R</title>
      <link>https://jennyrichmond.netlify.app/blog/2022-06-27-using-lists-in-r/</link>
      <pubDate>Mon, 27 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/2022-06-27-using-lists-in-r/</guid>
      <description>One of my goals while on long service leave is to learn some new R things that have been on my radar for a while&amp;hellip; the first of these is purrr. The purrr package allows you to iterate a function across different elements in a list or dataframe.
I have started to try and learn purr before ( see a list of resources here and I have copied other people&amp;rsquo;s purrr code a couple of times and used map to read in a LOT of .</description>
    </item>
    
    <item>
      <title>my favourite things about R</title>
      <link>https://jennyrichmond.netlify.app/blog/2022-01-17-my-favourite-things-about-r/</link>
      <pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/2022-01-17-my-favourite-things-about-r/</guid>
      <description>I am prepping a talk for R-Ladies Sydney about my favourite R things, the packages and functions that end up in every script I write.</description>
    </item>
    
    <item>
      <title>useful bash commands</title>
      <link>https://jennyrichmond.netlify.app/blog/2022-01-16-useful-bash-commands/</link>
      <pubDate>Sun, 16 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/2022-01-16-useful-bash-commands/</guid>
      <description>Finding a reason to learn how to bash my way around in the terminal</description>
    </item>
    
    <item>
      <title>joining dataframes</title>
      <link>https://jennyrichmond.netlify.app/blog/2022-01-14-joining-dataframes/</link>
      <pubDate>Fri, 14 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/2022-01-14-joining-dataframes/</guid>
      <description>The &lt;code&gt;dplyr&lt;/code&gt; package includes several different kind of joining functions which allow you to join dataframes together, when they share a common id variable.</description>
    </item>
    
    <item>
      <title>writing in Rmd with inline code</title>
      <link>https://jennyrichmond.netlify.app/blog/2022-01-14-writing-in-rmd-with-inline-code/</link>
      <pubDate>Fri, 14 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/2022-01-14-writing-in-rmd-with-inline-code/</guid>
      <description>One of the best things about RMarkdown is that you can use inline code to report summary and inferential statistics in your text. This means that it is impossible to make an error and if your data/values change, the text automatically updates.</description>
    </item>
    
    <item>
      <title>spark joy</title>
      <link>https://jennyrichmond.netlify.app/blog/2021-11-11-spark-joy/</link>
      <pubDate>Thu, 11 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/2021-11-11-spark-joy/</guid>
      <description>Working out how to Marie Kondo my blogdown workflow with categories and tags</description>
    </item>
    
    <item>
      <title>knitting to pdf</title>
      <link>https://jennyrichmond.netlify.app/blog/2021-11-10-knitting-to-pdf/</link>
      <pubDate>Wed, 10 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/2021-11-10-knitting-to-pdf/</guid>
      <description>Working out how to change the font when knitting Rmd to pdf</description>
    </item>
    
    <item>
      <title>making maps with R</title>
      <link>https://jennyrichmond.netlify.app/blog/2021-10-13-making-maps-with-r/</link>
      <pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/2021-10-13-making-maps-with-r/</guid>
      <description>Using TidyTuesday data to learn how to make maps in R</description>
    </item>
    
    <item>
      <title>I Am Learning R</title>
      <link>https://jennyrichmond.netlify.app/project/2021-10-03-i-am-learning-r/</link>
      <pubDate>Sun, 03 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/project/2021-10-03-i-am-learning-r/</guid>
      <description>Students often ask me what the best resources for learning R are&amp;hellip; #RYouWithMe is a great start&amp;hellip;
&amp;hellip;but I have another Distill site that showcases some of my other favourites at iamlearningr.netlify.app</description>
    </item>
    
    <item>
      <title>PSYC3361 internship</title>
      <link>https://jennyrichmond.netlify.app/project/2021-10-03-psyc3361-internship/</link>
      <pubDate>Sun, 03 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/project/2021-10-03-psyc3361-internship/</guid>
      <description>My favourite course is PSYC3361: Research internship. In recent years, we have gone all in on R and computational reproducibility.
You can check out the course site (made with Distill) at https://internship3361.netlify.app/.</description>
    </item>
    
    <item>
      <title>RYouWithMe</title>
      <link>https://jennyrichmond.netlify.app/project/2021-10-03-ryouwithme/</link>
      <pubDate>Sun, 03 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/project/2021-10-03-ryouwithme/</guid>
      <description>R-Ladies Sydney #RYouWithMe modules are the best place for beginner R user to start their learning journey- I am not at all biased.
Start with Basic Basics here.</description>
    </item>
    
    <item>
      <title>Polish your thesis</title>
      <link>https://jennyrichmond.netlify.app/talk/polish/</link>
      <pubDate>Thu, 30 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/talk/polish/</guid>
      <description></description>
    </item>
    
    <item>
      <title>parameterised penguins</title>
      <link>https://jennyrichmond.netlify.app/blog/2021-08-31-parameterised-penguins/</link>
      <pubDate>Tue, 31 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/2021-08-31-parameterised-penguins/</guid>
      <description>Knit many reports at once using parameters in RMarkdown</description>
    </item>
    
    <item>
      <title>PAT for GitHub</title>
      <link>https://jennyrichmond.netlify.app/blog/2021-06-22-pat-for-github/</link>
      <pubDate>Tue, 22 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/2021-06-22-pat-for-github/</guid>
      <description>How to set up a personalised authentiation token for github</description>
    </item>
    
    <item>
      <title>across and summary tables</title>
      <link>https://jennyrichmond.netlify.app/blog/2021-02-26-across-and-summary-tables/</link>
      <pubDate>Fri, 26 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/2021-02-26-across-and-summary-tables/</guid>
      <description>Don&amp;rsquo;t make objects that have the same name as a function and how to use across() to get summary statistics</description>
    </item>
    
    <item>
      <title>my first pull request</title>
      <link>https://jennyrichmond.netlify.app/blog/2021-01-08-my-first-pull-request/</link>
      <pubDate>Fri, 08 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/2021-01-08-my-first-pull-request/</guid>
      <description>There are so many lovely packages for colour palettes (see links at the bottom of this post for more).
This new one called feather by Shandiya Balasubramanium is inspired by Australian birds and is delightful.
Today I built my first R package! Meet feather: a set of colour palettes inspired by the plumage of Australian birds. It&amp;#39;s a work in progress and a bit rough around the edges, but I&amp;#39;m pretty proud of it#RStats #WildOz #DataVisualization https://t.</description>
    </item>
    
    <item>
      <title>functions to save you time</title>
      <link>https://jennyrichmond.netlify.app/blog/2021-01-05-functions-to-save-you-time/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/2021-01-05-functions-to-save-you-time/</guid>
      <description>Last year my R resolution was to google less. I think I succeeded (kinda). I wrote a few posts in my IDHTG series.
  counting things  recoding variable  work with factors  annotating plots  use colour palettes  I don&amp;rsquo;t necessary remember exactly how to recode variables or to make factors behave, but I know I have notes in my blog about those things to refer to, so that makes the googling much faster.</description>
    </item>
    
    <item>
      <title>cleaning penguins with the janitor package</title>
      <link>https://jennyrichmond.netlify.app/blog/digging-into-the-janitor-package/</link>
      <pubDate>Wed, 18 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/digging-into-the-janitor-package/</guid>
      <description>The janitor package by Sam Firke contains probably my FAVOURITE R function: clean_names(). By default when I am reading data into R, I pipe clean_names() onto the end of my read_csv(). I never have to look at inconsistently formatted variable names. But janitor package includes lots of other useful functions that make it easier to deal with dirty data and count stuff.
new_df &amp;lt;- read_csv(here(&amp;quot;data&amp;quot;, &amp;quot;df.csv&amp;quot;) %&amp;gt;% clean_names())  Exploring package functions   Are you keen to dig into the little known functions of a package that you use all the time?</description>
    </item>
    
    <item>
      <title>Date Night</title>
      <link>https://jennyrichmond.netlify.app/talk/lubridate/</link>
      <pubDate>Thu, 29 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/talk/lubridate/</guid>
      <description></description>
    </item>
    
    <item>
      <title>how to use colour palettes with ggplot</title>
      <link>https://jennyrichmond.netlify.app/blog/i-dont-have-to-google-series/how-to-use-colour-palettes-with-ggplot/</link>
      <pubDate>Thu, 22 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/i-dont-have-to-google-series/how-to-use-colour-palettes-with-ggplot/</guid>
      <description>If I had a dollar for everytime I have googled how to change the colours in my ggplot&amp;hellip;it is clearly time for a &amp;ldquo;I don&amp;rsquo;t have to google&amp;rdquo; post about it.
library(tidyverse) library(palmerpenguins) library(RColorBrewer) library(harrypotter) penguins &amp;lt;- penguins  make a couple of basic plots   When dealing with geom_point(), you can use colour to change the colour of the points. For geom_col(), you need to use fill; colour will change the border around your bars.</description>
    </item>
    
    <item>
      <title>How to write like a psychologist</title>
      <link>https://jennyrichmond.netlify.app/talk/writing/</link>
      <pubDate>Thu, 15 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/talk/writing/</guid>
      <description></description>
    </item>
    
    <item>
      <title>how to annotate plots</title>
      <link>https://jennyrichmond.netlify.app/blog/i-dont-have-to-google-series/how-to-annotate-plots/</link>
      <pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/i-dont-have-to-google-series/how-to-annotate-plots/</guid>
      <description>A new post in my I Don&amp;rsquo;t Have to Google (IDHTG) series. I&amp;rsquo;ve been wanting to work out how to add annotations to plots for a while and this plot from the @WeAreRladies account this week got me inspired!
I also looked at activity by week. You can see that there are some weeks when there was a break between curators. You can also see curators are totally different - both in terms of number of tweets and the number of retweets and replies.</description>
    </item>
    
    <item>
      <title>lubridate characters to dates</title>
      <link>https://jennyrichmond.netlify.app/blog/converting-characters-to-dates/</link>
      <pubDate>Sun, 11 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/converting-characters-to-dates/</guid>
      <description>Art by Allison Horst @allison_horst
 So far I have learned that lubridate has some nice functions for pulling date components like day, month, or year and using them within group_by() and summarise() or ggplot(). But most of the time when I am working with date data in the real world, R doesn&amp;rsquo;t even think my dates are dates. Most of the time date data that I read into R gets parsed as characters.</description>
    </item>
    
    <item>
      <title>lubridate month() &#43; wday()</title>
      <link>https://jennyrichmond.netlify.app/blog/lubridate-month-wday/</link>
      <pubDate>Sat, 26 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/lubridate-month-wday/</guid>
      <description>Art by Allison Horst @allison_horst
 When I am trying to work out a problem with R, I generally skip the package documentation, I avoid stack overflow, and I go straight for a blog post written by someone who has just learned what I am trying to learn.
I think when you have just learned something, you are in THE BEST PLACE to teach someone else. You are acutely aware of what it feels like to not &amp;ldquo;get it&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>lubridate first google</title>
      <link>https://jennyrichmond.netlify.app/blog/lubridate-googling/</link>
      <pubDate>Thu, 17 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/lubridate-googling/</guid>
      <description>I have set myself a challenge of learning to deal with dates in R. Nothing like setting a date for an R-Ladies Sydney event where you will teach other people to spur the motivation for learning how to use the lubridate package.
The plan is to learn how to use the package and document my learning process along the way so that at the end of Oct I can tell everyone&amp;hellip;</description>
    </item>
    
    <item>
      <title>group_by and summarise</title>
      <link>https://jennyrichmond.netlify.app/blog/group-by-and-summarise/</link>
      <pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/group-by-and-summarise/</guid>
      <description>Some students have been asking me how they can calcuate means and standard errors by condition. Here is a quick example using the palmer penguin data.
Details of the palmer penguin data, with art by Allison Horst, can be found here.
load packages     library(palmerpenguins) library(tidyverse)  read in data     penguins &amp;lt;- penguins glimpse(penguins) ## Rows: 344 ## Columns: 8 ## $ species &amp;lt;fct&amp;gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel… ## $ island &amp;lt;fct&amp;gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse… ## $ bill_length_mm &amp;lt;dbl&amp;gt; 39.</description>
    </item>
    
    <item>
      <title>calculating z scores</title>
      <link>https://jennyrichmond.netlify.app/blog/calculating-z-scores/</link>
      <pubDate>Thu, 16 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/calculating-z-scores/</guid>
      <description>The scale() function will center and/or scale a numeric object. Use center = TRUE to subtract the mean from the values; use scale = TRUE to divide the centered values by the standard deviation to produce z scores.
center variable A    scale(A, center = TRUE, scale = FALSE)
 generate z-scores for variable A    scale(A, center = TRUE, scale = TRUE)
 Lets try it with EMG data</description>
    </item>
    
    <item>
      <title>ggplot tricks</title>
      <link>https://jennyrichmond.netlify.app/blog/ggplot-tricks/</link>
      <pubDate>Sat, 04 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/ggplot-tricks/</guid>
      <description>Here are some ggplot tricks that I shared at the R-Ladies Sydney June Show and Tell.
Why is my internet speed so terrible?   Working from home and pivoting to teaching online has made me realise that my wifi connection is really bad, particularly when it rains. I have been teaching new honours students R and needed a little dataset to demo how to get data into R, so made a google form and put it out on twitter to confirm to myself that my connection really is worse than most other people.</description>
    </item>
    
    <item>
      <title>Spending in COVID</title>
      <link>https://jennyrichmond.netlify.app/blog/bank/</link>
      <pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/bank/</guid>
      <description>There is no doubt that COVID19 has massively disrupted how we spend our time and money. In this post, I update code inspired by this R-bloggers blog to look at how much less money we have been spending on eating in the last month, compared to April 2019.
Download a copy of your bank transactions in csv format.
Load packages   library(tidyverse) library(janitor) library(lubridate)  Read in data   Clean and rename, select just date, description, debit amount, add new column for class with default value = &amp;ldquo;Other&amp;rdquo;</description>
    </item>
    
    <item>
      <title>recoding variables</title>
      <link>https://jennyrichmond.netlify.app/blog/i-dont-have-to-google-series/recoding-variables/</link>
      <pubDate>Sat, 08 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/i-dont-have-to-google-series/recoding-variables/</guid>
      <description>I don&amp;rsquo;t often deal with questionnaire data in R, but Ariana and I have started trying import her qualtrics data into R and to write a script to score her measures. The first step is to recode the variables to make it possible to add up scores on subscales.
load packages   library(tidyverse)  make a little dataframe   df &amp;lt;- data.frame(&amp;#34;pp_no&amp;#34; = 1:12, &amp;#34;sectionA_1&amp;#34; = c(&amp;#34;Strongly Agree&amp;#34;,&amp;#34;Agree&amp;#34;, &amp;#34;Disagree&amp;#34;,&amp;#34;Strongly Disagree&amp;#34;), &amp;#34;sectionA_2&amp;#34; = c(&amp;#34;Strongly Agree&amp;#34;,&amp;#34;Agree&amp;#34;, &amp;#34;Disagree&amp;#34;,&amp;#34;Strongly Disagree&amp;#34;), &amp;#34;sectionB_1&amp;#34; = c(&amp;#34;Frequently&amp;#34;,&amp;#34;Sometimes&amp;#34;, &amp;#34;Infrequently&amp;#34;), &amp;#34;sectionB_2&amp;#34; = c(&amp;#34;Frequently&amp;#34;,&amp;#34;Sometimes&amp;#34;, &amp;#34;Infrequently&amp;#34;))  Option 1: use mutate() and case_when()     My first intuition is to use case_when(), which I have written about before.</description>
    </item>
    
    <item>
      <title>BYOD Getting started with the tidyverse</title>
      <link>https://jennyrichmond.netlify.app/talk/byod/</link>
      <pubDate>Wed, 29 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/talk/byod/</guid>
      <description></description>
    </item>
    
    <item>
      <title>counting things</title>
      <link>https://jennyrichmond.netlify.app/blog/i-dont-have-to-google-series/counting-things/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/i-dont-have-to-google-series/counting-things/</guid>
      <description>Sometimes things that are really easy to do in excel are not so intuitive in R. Like counting things. Because most of the time I am working with data in long format, you can end up with hundreds of observations, so functions like length() aren&amp;rsquo;t useful. Today I just wanted to check how many participants were in this dataset and it took me some significant googling.
load packages   library(tidyverse) library(ggbeeswarm) library(janitor)  create a little df   df &amp;lt;- data.</description>
    </item>
    
    <item>
      <title>things i dont have to google anymore</title>
      <link>https://jennyrichmond.netlify.app/blog/i-dont-have-to-google-series/i-dont-have-to-google/</link>
      <pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/i-dont-have-to-google-series/i-dont-have-to-google/</guid>
      <description>My 2020 Resolution   There are a lot of things I do in R that I have to google EVERY TIME. My 2020 R resolution is to try and google less. I want to commit a few of these really frequently used things to memory. The key to that: write a blog post about each one. That way, even if it doesn&amp;rsquo;t stick, I can always just google my own blog.</description>
    </item>
    
    <item>
      <title>working with factors</title>
      <link>https://jennyrichmond.netlify.app/blog/i-dont-have-to-google-series/working-with-factors/</link>
      <pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/i-dont-have-to-google-series/working-with-factors/</guid>
      <description>I use read_csv to read data into R and it most conservatively assumes that when you have text in a variable you are dealing characters (not factors). Of course these things are often factors so you need to explicitly convert them if you want to use the factor in an analysis or have it appear the way you want in a ggplot.
The forcats package will do this with as_factor</description>
    </item>
    
    <item>
      <title>what did we just do?</title>
      <link>https://jennyrichmond.netlify.app/blog/git-success/</link>
      <pubDate>Sun, 17 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/git-success/</guid>
      <description>I started a blog post and pushed it to the git repo that contains my blog. Charles forked my repo, cloned it to her machine, contributed to the post, and then pushed the updates to her forked copy of the repo.
Then she did a pull request. People in git-land talk about PRs (pull requests) all the time, and the term seems backwards to me. A pull request is when you request that the owner of a repo &amp;ldquo;pull&amp;rdquo; the changes that you have made.</description>
    </item>
    
    <item>
      <title>serious git thinking</title>
      <link>https://jennyrichmond.netlify.app/blog/serious-git-thinking/</link>
      <pubDate>Tue, 12 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/serious-git-thinking/</guid>
      <description>I have been a git user for 513 days.
When I was first setting up this blog, my dear friend Charles T Gray helped me learn the 3 terminal commands that you need to know to interact with git in the most rudimentary of ways.
 git add .
  git commit -m &amp;ldquo;something meaningful&amp;rdquo;
  git push
 Since then I have mostly just used these 3 commands to push blog posts to git.</description>
    </item>
    
    <item>
      <title>best stats meme ive seen in a while</title>
      <link>https://jennyrichmond.netlify.app/blog/best-stats-meme-ive-seen-in-a-while/</link>
      <pubDate>Wed, 09 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/best-stats-meme-ive-seen-in-a-while/</guid>
      <description>Just putting this here because I&amp;rsquo;m sure it will come in handy some day.
not untrue https://t.co/TR8uueTsk9
&amp;mdash; Shit Academics Say (@AcademicsSay) October 8, 2019  </description>
    </item>
    
    <item>
      <title>insights from the RMarkdown whisperer</title>
      <link>https://jennyrichmond.netlify.app/blog/insights-from-the-markdown-whisperer/</link>
      <pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/insights-from-the-markdown-whisperer/</guid>
      <description>I had the pleasure of attending Alison Hill&amp;rsquo;s RMarkdown workshop in Canberra on Monday and I came away with so many tips and tricks! It was brillant.
Alison covered A LOT over the course of the day. I learned lots of the power of yaml, how to create parameterised reports, and how to make a package that contains customised .Rmd templates. Each of those topics are blogposts for another day, but my favourite bit was making a beautiful Academic theme blogdown site.</description>
    </item>
    
    <item>
      <title>mutate &#43; if else = new conditional variable</title>
      <link>https://jennyrichmond.netlify.app/blog/mutate-and-if-else-to-create-new-variables/</link>
      <pubDate>Wed, 21 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/mutate-and-if-else-to-create-new-variables/</guid>
      <description>&lt;p&gt;I keep googling 
&lt;a href=&#34;https://rstudio-pubs-static.s3.amazonaws.com/116317_e6922e81e72e4e3f83995485ce686c14.html#/1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;these slides&lt;/a&gt; by 
&lt;a href=&#34;@daranzolin&#34;&gt;David Ranzolin&lt;/a&gt; each time I try to combine mutate with ifelse to create a new variable that is conditional on values in other variables.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>customise your R experience</title>
      <link>https://jennyrichmond.netlify.app/blog/customise-your-r-experience/</link>
      <pubDate>Sun, 11 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/customise-your-r-experience/</guid>
      <description>Would you like RStudio to show you a random The Good Place quote, spoken by a ASCII animal along with some random message of praise/encouragement each time you start a coding session or restart R?
Of course you would!!!
how to customise your .rprofile   You will need to install the following packages:
 usethis goodshirt cowsay praise  Use usethis to open your .rprofile file     usethis::edit_r_profile() Copy and paste this text into your .</description>
    </item>
    
    <item>
      <title>Pivoting</title>
      <link>https://jennyrichmond.netlify.app/blog/pivoting/</link>
      <pubDate>Sat, 10 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/pivoting/</guid>
      <description>Cute #rstats monster art by the amazing Allison Horst.
knitr::include_graphics(&amp;#34;gatherspread.jpeg&amp;#34;) I have been using gather() and spread() a lot lately. I&amp;rsquo;m on the tidy data train; long data is essential for ggplot etc, but sometimes you want to do calculations row wise, which is kinda complicated.
For example, this week Matilda and I were working with her language/locomotion data and we were looking at the number of action-directed, affirmative, and descriptive responses that parents make to their infants.</description>
    </item>
    
    <item>
      <title>making memes in R</title>
      <link>https://jennyrichmond.netlify.app/blog/making-memes-in-r/</link>
      <pubDate>Sat, 27 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/making-memes-in-r/</guid>
      <description>I having been prepping for my lightning talk at the R-Ladies Sydney Birthday this weekend and learning about all the packages that you can use to make memes in R. I&amp;rsquo;m going going to talk about my favourite option (which is the memery package), but here is what I learned about other packages.
Option 1: memer     The memer package by Sam Tyner is a tidyverse compatible package that allows you to replace text in popular memes with your own.</description>
    </item>
    
    <item>
      <title>apa figures</title>
      <link>https://jennyrichmond.netlify.app/blog/apa-figures/</link>
      <pubDate>Wed, 26 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/apa-figures/</guid>
      <description>As I write my first paper reporting data analysis coming out of R (woot!!!), here are some notes summarising all the googling I have done this morning about how to produce APA style figures in ggplot.
via GIPHY
 Load libraries     Start by loading tidyverse to get ggplot, here to make finding the data easy, and papaja to get the theme_apa() function.
library(tidyverse) library(here) library(papaja)  Read in data     plotdata &amp;lt;- read_csv(&amp;#34;plotdata.</description>
    </item>
    
    <item>
      <title>blogdown</title>
      <link>https://jennyrichmond.netlify.app/blog/blogdown/</link>
      <pubDate>Tue, 18 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/blogdown/</guid>
      <description>There has been lots of talk about blogdown on #rstats Twitter recently and people have been talking up the Hugo &amp;ldquo;Academic theme&amp;rdquo;.
I want to give it a go to update my lab website, so thought it might be a good idea to pull together all the useful links I&amp;rsquo;ve seen recently into one place.
Alison Hill   I used Alison&amp;rsquo;s blog post when I first set up this blog.</description>
    </item>
    
    <item>
      <title>newposttest</title>
      <link>https://jennyrichmond.netlify.app/blog/newposttest/</link>
      <pubDate>Tue, 18 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/newposttest/</guid>
      <description>I think I have broken hugo   testing whether this works</description>
    </item>
    
    <item>
      <title>rm anova options</title>
      <link>https://jennyrichmond.netlify.app/blog/anova-options/</link>
      <pubDate>Fri, 14 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/anova-options/</guid>
      <description>I&amp;rsquo;ve been analysing some future thinking data and playing around with packages that can do repeated ANOVA (I know, I should do LMM). There is more than one way to skin a cat and the differences come down to two things.
 the intuitiveness of the function arguments the readibility of the output  Some checks to do before you start
 all of these packages assume that you within and between subjects variables are factors, but also that your participant id is a factor  A few favourites     Option 1: old school aov()   This code comes from the ANOVA cookbook</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://jennyrichmond.netlify.app/contact/</link>
      <pubDate>Mon, 25 Feb 2019 13:38:41 -0600</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/contact/</guid>
      <description>** Contact page don&amp;rsquo;t contain a body, just the front matter above. See form.html in the layouts folder.
Formspree requires a (free) account and new form to be set up. The link is made on the final published url in the field: Restrict to Domain. It is possible to register up to 2 emails free and you can select which one you want the forms to go to within Formspree in the Settings tab.</description>
    </item>
    
    <item>
      <title>Just Three Things</title>
      <link>https://jennyrichmond.netlify.app/blog/just-three-things/</link>
      <pubDate>Tue, 19 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/just-three-things/</guid>
      <description>I love me a good #rstats screencast. David Robinson has been screencasting his #TidyTuesday efforts for the past few months and while it is GREAT to watch a master at work, I just don’t have time to watch someone code for an hour, in order to extract a handful of tips.
So when I saw Nick Tierney tweet about posting short videos that contain Just Three Things, I thought “that is a GREAT idea.</description>
    </item>
    
    <item>
      <title>Typography Styles &amp; Element Examples</title>
      <link>https://jennyrichmond.netlify.app/elements/</link>
      <pubDate>Mon, 18 Feb 2019 12:27:33 -0600</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/elements/</guid>
      <description>Font Sizes   A A A A A A A A   6rem
(96px) 5rem
(80px) 3rem
(48px) 2.25rem
(36px) 1.5rem
(24px) 1.25rem
(20px) 1rem
(16px) .875rem
(14px)     Type Samples Head&amp;shy;line Sub&amp;shy;head&amp;shy;line Level 1 Heading One page to rule them all...well, not really. This page displays sample typography and page elements to illustrate their style. Things like headings and paragraphs showing the beautiful type scale, form elements, tabular data, and image layouts just to name a few.</description>
    </item>
    
    <item>
      <title>infinite moon reader</title>
      <link>https://jennyrichmond.netlify.app/blog/infinite-moon-reader/</link>
      <pubDate>Thu, 03 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/infinite-moon-reader/</guid>
      <description>I saw an intriguing tweet this afternoon.
🧙 ♂️Live preview for R Markdown!
TIL that you can have a live preview of your #rstats Markdown docs!
Just use the infinite_moon_reader function from the xaringan package.
It works for all single-HTML-file outputs and even comes with a pre-made RStudio Addin!
&amp;mdash; Jozef Hajnala (@jozefhajnala) January 2, 2019  When Charles was visiting for #RCurious in June, she had written her slides in xaringan and was raving about infinite moon reader.</description>
    </item>
    
    <item>
      <title>how to add a gif</title>
      <link>https://jennyrichmond.netlify.app/blog/how-to-add-a-gif/</link>
      <pubDate>Tue, 18 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/how-to-add-a-gif/</guid>
      <description>Sometimes your plot needs a celebratory gif.
I have just finished the vizwhiz module for #RYouWithMe and to top off the series I worked out how to add an RLady Wizard to our final plot.
Just so I&amp;rsquo;ll remember for next time, here is a step by step how to&amp;hellip;
knitr::include_graphics(&amp;#34;beachwiz.gif&amp;#34;) how to add a gif to your ggplot      Install the magick package and load it with ggplot.</description>
    </item>
    
    <item>
      <title>how to use the `here` package</title>
      <link>https://jennyrichmond.netlify.app/blog/how-to-use-the-here-package/</link>
      <pubDate>Sun, 14 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/how-to-use-the-here-package/</guid>
      <description>I&amp;rsquo;m still working on getting my head around where R thinks we work and how to tell it where my stuff lives (aka working directories).
On twitter yesterday Alison Hill, Adam Gruer, Zoe Meers and Irene Steves helped me sort out my issues with here.
hi #rstats friends, how do YOU use the `here` package? I thought I had my head around it but I&amp;#39;m doing something wrong. Here my markdown lives within the &amp;quot;markdown&amp;quot; folder, so I set here to the &amp;quot;data&amp;quot; folder, call read_csv(here(&amp;quot;datafile.</description>
    </item>
    
    <item>
      <title>things i googled this week</title>
      <link>https://jennyrichmond.netlify.app/blog/things-i-googled-this-week/</link>
      <pubDate>Mon, 08 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/things-i-googled-this-week/</guid>
      <description>How would we learn R if not for google? Here are some things I googled this week (and mostly not for the first time).
1. how to install a package from github.   95% of the time, packages I want are on CRAN and I can just use the install.packages function to install them.
install.packages(&amp;quot;nameofthepackage&amp;quot;) Occasionally though, I see something cool and new on Twitter and need to install from github.</description>
    </item>
    
    <item>
      <title>Writing about LMM</title>
      <link>https://jennyrichmond.netlify.app/blog/writing-lmm/</link>
      <pubDate>Tue, 25 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/writing-lmm/</guid>
      <description>Learning new things is HARD. Stats methods are particularly hard because it not just about running the test. You have to&amp;hellip;
 learn when to run the test learn how to run the test learn how to interpret the test AND learn how to write about the results of the test  Part of what makes this learning hard is that our research methods training has drummed into us that there is a RIGHT WAY TO DO IT.</description>
    </item>
    
    <item>
      <title>let me count the ways</title>
      <link>https://jennyrichmond.netlify.app/blog/let-me-count-the-ways/</link>
      <pubDate>Mon, 24 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/let-me-count-the-ways/</guid>
      <description>When we want to learn how to do something new in R, we all start by googling it. Having worked out simple ANOVA, next on my list is repeated measures.
 Domnique Makowski has an excellent blog post that comes up at the top of the search results when you google &amp;ldquo;how to do repeated measures ANOVA in R&amp;rdquo;.
He lures you in with a post that seems like it is going to solve all your problems and then and BAM&amp;hellip; starts the post by saying &amp;ldquo;DON&amp;rsquo;T do it&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>where is here?</title>
      <link>https://jennyrichmond.netlify.app/blog/where-is-here/</link>
      <pubDate>Tue, 18 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/where-is-here/</guid>
      <description>As I add new projects to my rstats portfolio and work collaboratively on projects with students the issue of working directories is becoming more and more complicated. Not really understanding how working directories and file paths actually work, I have been relying on the beginner logic&amp;hellip;
 Everything will be just fine as long as you keep your datafiles in the same folder as your .rmd file
 via GIPHY</description>
    </item>
    
    <item>
      <title>next up anova</title>
      <link>https://jennyrichmond.netlify.app/blog/next-up-anova/</link>
      <pubDate>Wed, 12 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/next-up-anova/</guid>
      <description>In the kind of research that we do, t-tests can only take you so far. Most often we design factorial experiments where we are interested in both main effects and interactions. Because we work with infants and young children, who are both expensive to recruit/test and notoriously variable in their behaviour, we try to design experiments that use within-subjects designs; each child gives us more than one data point and we need to use repeated-measures analyses.</description>
    </item>
    
    <item>
      <title>more wrangling tips</title>
      <link>https://jennyrichmond.netlify.app/blog/more-wrangling-tips/</link>
      <pubDate>Tue, 11 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/more-wrangling-tips/</guid>
      <description>It is definitely true that it takes much longer to get your data ready for analysis than it does to actually analyse it. Apparently up to 80% of the data analysis time is spent wrangling data (and cursing and swearing).
Did you know up to 80% of data analysis is spent on the process of cleaning and preparing data? - cf. Wickham, 2014 and Dasu and Johnson, 2003
So here is an excellent approach to data wrangling in #rstats https://t.</description>
    </item>
    
    <item>
      <title>testing out t-tests</title>
      <link>https://jennyrichmond.netlify.app/blog/testing-out-t-tests/</link>
      <pubDate>Sat, 08 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/testing-out-t-tests/</guid>
      <description>I was trying to work out how to do t-tests using my own data and the lsr package but ended up working with Dani&amp;rsquo;s AFL data from her book while trying to work out why R insisted that my outcome variable wasn&amp;rsquo;t numeric (it definitely was). Turns out that the lsr package doesn&amp;rsquo;t deal well with tibbles (which are created by default when you use read_csv to get your data) but if you use read.</description>
    </item>
    
    <item>
      <title>using R for analysis</title>
      <link>https://jennyrichmond.netlify.app/blog/using-r-for-analysis/</link>
      <pubDate>Sat, 08 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/using-r-for-analysis/</guid>
      <description>I am feeling more confident about my resolution to get rid of Excel and only use R for data wrangling and visualisation. Next steps&amp;hellip; analysis.
I&amp;rsquo;m starting simple (I presume) with t-tests. Mostly commonly I want to determine whether there is a difference in the performance of independent groups of kids, or a difference between kids&#39; performance on two different conditions, or whether kids are just guessing (i.e. whether their performance differs significantly chance).</description>
    </item>
    
    <item>
      <title>creating data using rep()</title>
      <link>https://jennyrichmond.netlify.app/blog/creating-data-using-rep/</link>
      <pubDate>Fri, 07 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/creating-data-using-rep/</guid>
      <description>The frequency with which my data is missing important information when it gets to R is a bit embarrassing. I&amp;rsquo;m sure as I learn what kind of information R needs I&amp;rsquo;ll get better at this but for the moment using functions like rep() to create variables like trial number or block has been super useful.
Alison Smith has a great blog called Very Statisticious and her post about simulating data is super helpful.</description>
    </item>
    
    <item>
      <title>Use map to read many csv files</title>
      <link>https://jennyrichmond.netlify.app/blog/use-map-to-read-many-csv-files/</link>
      <pubDate>Thu, 06 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/use-map-to-read-many-csv-files/</guid>
      <description>Dipping my toes in purrr here and replicating options from a super useful blog post I found by ClausWilke
How to use map() to read in and bind together several .csv files   Option 1   The simplest option; use when your .csv files contain ID/participant and all live your working directory
Get list of .csv files called files. The code below looks for files that have .csv as part of the filename in the the working directory</description>
    </item>
    
    <item>
      <title>I don’t like cats much</title>
      <link>https://jennyrichmond.netlify.app/blog/i-don-t-like-cats-much/</link>
      <pubDate>Wed, 05 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/i-don-t-like-cats-much/</guid>
      <description>I don&amp;rsquo;t love cats. I am not a member of @RCatLadies. So the fact that Tidyverse packages for dealing with factors and functional programming have cat-related names (forcats and purrr) does not endear them to me.
I knew there was a time when I would encounter an R problem that needed the power of for loops, so when I asked the Twittersphere whether there was an alternative (hopefully a tidyverse one) that would allow me to avoid loops a little longer, I was a bit disappointed to hear that it is the purrr package.</description>
    </item>
    
    <item>
      <title>lesser known stars of the tidyverse</title>
      <link>https://jennyrichmond.netlify.app/blog/lesser-known-stars-of-the-tidyverse/</link>
      <pubDate>Thu, 30 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/lesser-known-stars-of-the-tidyverse/</guid>
      <description>Emily Robinson writes a great blog called www.hookedondata.org. She talked at the 2018 New York R conference recently and shared some of her favourite (less well known) stars of the Tidyverse. Here are her slides www.tiny.cc/nyrtalk and my notes&amp;hellip;
1.use as_tibble()     Tibble = modern dataframe. Use instead of printing your dataset to the console.
as_tibble() will only print the first 10 rows and columns that fit on the screen.</description>
    </item>
    
    <item>
      <title>dirty data</title>
      <link>https://jennyrichmond.netlify.app/blog/dirty-data/</link>
      <pubDate>Mon, 27 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/dirty-data/</guid>
      <description>I have been doing lots of data wrangling recently and decided a needed a quick rundown of data cleaning in R. Here are notes on useful things I learned recently.
Quick summaries   class() will let you know whether you are working with a dataframe or not
dim() gives you a little info about the dimensions of your data by telling you how many rows nd columns you have</description>
    </item>
    
    <item>
      <title>hotkeys</title>
      <link>https://jennyrichmond.netlify.app/blog/hotkeys/</link>
      <pubDate>Wed, 15 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/hotkeys/</guid>
      <description>There are some commands that as I get more and more familiar with Rstudio I find myself typing again and again.
Keyboard shortcuts are helpful (disclaimer: these mac versions).
  Option-Command-i will open a new Rmarkdown code chunk.
  Option - is a handy way of typing assignment (&amp;lt;-)
  Shift-Command-M is a fast way of adding a pipe (%&amp;gt;%)
  A little googling and here is a whole list that I am yet to learn.</description>
    </item>
    
    <item>
      <title>cooking with datapasta</title>
      <link>https://jennyrichmond.netlify.app/blog/cooking-with-datapasta/</link>
      <pubDate>Thu, 09 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/cooking-with-datapasta/</guid>
      <description>Another day&amp;hellip; another data set. This time I am trying to get EMG data from LabChart into R. LabChart is the software we use to record EMG data and do the first steps of data cleaning/processing. At the moment a good chunk of the cleaning process involves Excel macros, so my goal is to replicate what we have traditionally done in Excel in R, so that it is more automated and more reproducible.</description>
    </item>
    
    <item>
      <title>calculating age</title>
      <link>https://jennyrichmond.netlify.app/blog/calculating-age/</link>
      <pubDate>Sat, 04 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/blog/calculating-age/</guid>
      <description>I have been playing with a new (not actually new, but new to R) dataset this week.
Successes:    I loaded the data in using read_csv. I made dates into dates.   The interview group is listed as 1s and 2s in the file so R thought those were integers. So I used as.factor to convert.  dataframe$variable &amp;lt;- as.factor(dataframe$variable) I used lubridate package to specify that DOB and Test_date were dates with Day Month Year (dmy) format.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://jennyrichmond.netlify.app/quick/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/quick/</guid>
      <description> Find blog things fast with these links     file paths and other nightmares       how to use here()  where is here  ggplot       make APA figures  colour palettes  annotate plots  plot raw data  add a gif  RMarkdown       writing in Rmd with inline code  Hugo Apero categories and tags  knitting to pdf  using parameters in Rmd  insights from the RMarkdown whisperer  blogdown links  infinite moon reader  data wrangling       joining dataframes  lesser known stars tidyverse  dirty data dealings  across and summary tables  cleaning with janitor  group_by and summarise  mutate + ifelse | case_when  pivot  gather spread unite separate  IDHTG:recoding  IDHTG: factors  IDHTG: counting things  R-Ladies       my favourite things about R  show&amp;amp;tell: plot raw data  lubridate: characters to dates  lubridate: month() and wday()  lubridate: first google  purrr       purrr googling  using map to read many files  stats       meme  z scores  R for analysis  LSR: testing t-tests lsr  LSR: anova  repeated measures ANOVA  many ways LMM  writing about lmm  git       PAT for github  pull requests  thinking about git  collaborating w git  learning logs RPubs       table options: kableExtra, gt, DT  word count w tidytext  reproducible example aka reprex  using across to get summary stats  making wordclouds  raincloud plots  using walk to try out palettes  patchwork plots together  pwr analysis  interactive plots w ggplotly  automagically reporting penguin stats with report  join points with lines using group aesthetic  tidy tuesday: bechdel test  tidy tuesday: billboard  tidy tuesday: emmys  hunting missing penguins narniar  rowwise &amp;amp; c_across  learning about: case_when  learning about: pillar &amp;amp; glimpse  learning about: clean_names  adventofcode: lag and lead  misc       useful bash commands  making maps with R  writing functions  spending in covid  customise your R profile  make a meme  just three things  things i google  creating data w rep  hotkeys  datapasta  calculating age  </description>
    </item>
    
    <item>
      <title>Contributors</title>
      <link>https://jennyrichmond.netlify.app/contributors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/contributors/</guid>
      <description>Thank you to all the folks who have contributed both technical and creative skills to this project:
   Desirée De Leon 🦒 (designed 5 of the custom color themes, made illustrations for the workshop, and provided general aesthetic feedback along the way)
   Garrick Aden-Buie 🧙‍♀️ (debugged headroom.js and lent his panelset.js code to the theme)
   Allison Horst 🐕 (awesome illustrations of campfires, seedlings, and evergreens, as well as my R Markdown hedgehog mascot 🦔)</description>
    </item>
    
    <item>
      <title>License</title>
      <link>https://jennyrichmond.netlify.app/license/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jennyrichmond.netlify.app/license/</guid>
      <description>My blog posts are released under a Creative Commons Attribution-ShareAlike 4.0 International License.
  </description>
    </item>
    
  </channel>
</rss>
